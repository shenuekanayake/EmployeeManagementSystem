<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        /fgJgGcAAAAASUVORK5CYII=
</value>
  </data>
</root>